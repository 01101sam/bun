10 | {
11 |   // forEach works on synchronous streams with a synchronous predicate
12 |   const stream = Readable.from([1, 2, 3]);
13 |   const result = [1, 2, 3];
14 |   (async () => {
15 |     await stream.forEach((value) => assert.strictEqual(value, result.shift()));
                      ^
TypeError: undefined is not a function
      at node:stream:75:20
      at /Users/bun/code/bun/test/js/node/test/parallel/test-stream-forEach.js:15:18
      at asyncFunctionResume (1:11)
      at /Users/bun/code/bun/test/js/node/test/parallel/test-stream-forEach.js:14:4
      at /Users/bun/code/bun/test/js/node/test/parallel/test-stream-forEach.js:15:78
      at asyncFunctionResume (1:11)
      at promiseReactionJobWithoutPromiseUnwrapAsyncContext (1:11)
      at promiseReactionJob (1:11)
16 |   })().then(common.mustCall());
17 | }
18 | 
19 | {
20 |   // forEach works an asynchronous streams
21 |   const stream = Readable.from([1, 2, 3]).filter(async (x) => {
                                               ^
TypeError: undefined is not a function
      at filter (node:stream:55:20)
      at /Users/bun/code/bun/test/js/node/test/parallel/test-stream-forEach.js:21:43
      at asyncFunctionResume (1:11)
      at promiseReactionJobWithoutPromiseUnwrapAsyncContext (1:11)
      at promiseReactionJob (1:11)

Bun v1.1.31-debug+5fc53353f (macOS arm64)
