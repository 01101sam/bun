name: zig-build

on:
  workflow_dispatch:
    inputs:
      os:
        type: string # e.g. 'linux', 'darwin', 'windows'
        required: true
      arch:
        type: string # e.g. 'x64' or 'arm64'
        required: true
      cpu:
        type: string # e.g. 'native', 'nehalem', 'haswell'
        required: true

jobs:
  zig-build:
    name: zig-build
    runs-on: ${{ github.repository_owner == 'oven-sh' && 'namespace-profile-zig-build' || 'ubuntu-latest' }}
    steps:
      - name: Detect Target
        run: |
          arch="${{ inputs.arch }}"
          os="${{ inputs.os }}"
          case $arch in
            x64 | x86_64)
              arch="x86_64"
              buildarch="amd64"
              ;;
            arm64 | aarch64)
              arch="aarch64"
              buildarch="arm64"
              ;;
            *)
              echo "Unknown architecture: $arch"
              exit 1
              ;;
          esac
          case $os in
            linux)
              os="linux"
              triplet="${arch}-linux-gnu"
              ;;
            darwin | macos)
              os="macos"
              triplet="${arch}-macos-none"
              ;;
            windows | win32)
              os="windows"
              triplet="${arch}-windows-msvc"
              ;;
            *)
              echo "Unknown operating system: $os"
              exit 1
              ;;
          esac
          echo "ARCH=$arch" >> $GITHUB_ENV
          echo "BUILDARCH=$buildarch" >> $GITHUB_ENV
          echo "OS=$os" >> $GITHUB_ENV
          echo "TRIPLET=$triplet" >> $GITHUB_ENV
          artifact="bun-$triplet-$arch-zig"
          echo "ARTIFACT=$artifact" >> $GITHUB_ENV
          echo "artifact=$artifact" >> $GITHUB_OUTPUT

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compile Zig Object
        uses: docker/build-push-action@v5
        with:
          push: false
          target: build_release_obj
          build-args: |
            TRIPLET=${{ env.TRIPLET }}
            BUILD_MACHINE_ARCH=${{ env.ARCH }}
            ARCH=${{ env.ARCH }}
            CPU_TARGET=${{ inputs.cpu }}
            GIT_SHA=${{ github.sha }}
          platforms: |
            linux/${{ env.ARCH }}
          outputs: |
            type=local,dest=${{ runner.temp }}/release

      - name: Upload Zig Object
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT }}
          path: ${{ runner.temp }}/release/bun-zig.o
          if-no-files-found: error
