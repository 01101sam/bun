name: zig-build

on:
  workflow_call:
    inputs:
      os:
        type: string # e.g. 'linux', 'darwin', 'windows'
        required: true
      arch:
        type: string # e.g. 'x64' or 'arm64'
        required: true
      baseline:
        type: boolean
        required: false

jobs:
  zig-build:
    name: zig-build
    runs-on: ${{ github.repository_owner == 'oven-sh' && 'namespace-profile-zig-build' || 'ubuntu-latest' }}
    steps:
      - name: Detect Target
        run: |
          case "${{ inputs.arch }}" in
            x64 | x86_64)
              arch="x86_64"
              buildarch="amd64"
              ;;
            arm64 | aarch64)
              arch="aarch64"
              buildarch="arm64"
              ;;
            *)
              echo "Unsupported architecture"
              exit 1
              ;;
          esac
          case "${{ inputs.os }}" in
            linux)
              triplet="${arch}-linux-gnu"
              ;;
            darwin | macos)
              triplet="${arch}-macos-none"
              ;;
            windows | win32)
              triplet="${arch}-windows-msvc"
              ;;
            *)
              echo "Unsupported operating system"
              exit 1
              ;;
          esac
          if [ "$arch" = "x86_64" ]; then
            if [ -n "${{ inputs.baseline }}" ]; then
              cpu="nehalem"
            else
              cpu="haswell"
            fi
          else
            cpu="native"
          fi
          echo "ARCH=$arch" >> $GITHUB_ENV
          echo "BUILDARCH=$buildarch" >> $GITHUB_ENV
          echo "CPU_TARGET=$cpu" >> $GITHUB_ENV
          echo "TRIPLET=$triplet" >> $GITHUB_ENV
          artifact="bun-zig-$triplet-$cpu"
          echo "ARTIFACT=$artifact" >> $GITHUB_ENV
          echo "artifact=$artifact" >> $GITHUB_OUTPUT

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compile Zig Object
        uses: docker/build-push-action@v5
        with:
          push: false
          target: build_release_obj
          build-args: |
            TRIPLET=${{ env.TRIPLET }}
            BUILD_MACHINE_ARCH=${{ env.ARCH }}
            ARCH=${{ env.ARCH }}
            CPU_TARGET=${{ env.CPU_TARGET }}
            GIT_SHA=${{ env.GITHUB_SHA }}
          platforms: |
            linux/${{ env.ARCH }}
          outputs: |
            type=local,dest=${{ runner.temp }}/release

      - name: Upload Zig Object
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT }}
          path: ${{ runner.temp }}/release/bun-zig.o
          if-no-files-found: error
