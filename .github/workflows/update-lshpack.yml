name: Update lshpack

on:
  schedule:
    - cron: "0 5 * * 0"
  workflow_dispatch:

jobs:
  check-update:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4

      - name: Check lshpack version
        id: check-version
        run: |
          set -euo pipefail

          # Extract the tag from the line after TAG
          CURRENT_VERSION=$(awk '/[[:space:]]*TAG[[:space:]]*$/{getline; gsub(/^[[:space:]]+|[[:space:]]+$/,"",$0); print}' cmake/targets/BuildLshpack.cmake)

          if [ -z "$CURRENT_VERSION" ]; then
            echo "Error: Could not find TAG line in BuildLshpack.cmake"
            exit 1
          fi

          echo "current=$CURRENT_VERSION" >> $GITHUB_OUTPUT

          LATEST_RELEASE=$(curl -sL https://api.github.com/repos/litespeedtech/ls-hpack/releases/latest)
          if [ -z "$LATEST_RELEASE" ]; then
            echo "Error: Failed to fetch latest release from GitHub API"
            exit 1
          fi

          LATEST_TAG=$(echo "$LATEST_RELEASE" | jq -r '.tag_name')
          if [ -z "$LATEST_TAG" ] || [ "$LATEST_TAG" = "null" ]; then
            echo "Error: Could not extract tag name from GitHub API response"
            exit 1
          fi

          echo "tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Update version if needed
        if: success() && steps.check-version.outputs.current != steps.check-version.outputs.tag
        run: |
          set -euo pipefail
          # Handle multi-line format where TAG and its value are on separate lines
          sed -i -E '/[[:space:]]*TAG[[:space:]]*$/{n;s/[[:space:]]*([0-9a-f]+)[[:space:]]*$/    ${{ steps.check-version.outputs.tag }}/}' cmake/targets/BuildLshpack.cmake

      - name: Create Pull Request
        if: success() && steps.check-version.outputs.current != steps.check-version.outputs.tag
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          add-paths: |
            cmake/targets/BuildLshpack.cmake
          commit-message: "deps: update lshpack to ${{ steps.check-version.outputs.tag }} (${{ steps.check-version.outputs.tag }})"
          title: "deps: update lshpack to ${{ steps.check-version.outputs.tag }}"
          delete-branch: true
          branch: deps/update-lshpack-${{ github.run_number }}
          body: |
            ## What does this PR do?

            Updates lshpack to version ${{ steps.check-version.outputs.tag }}

            Auto-updated by [this workflow](https://github.com/oven-sh/bun/actions/workflows/update-lshpack.yml)
